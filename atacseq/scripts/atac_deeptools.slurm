#!/bin/bash
#SBATCH --time=0:40:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --mem=12G
#SBATCH --cpus-per-task=6   # Nb of threads we want to run on
#SBATCH -o atacseq/log/slurmjob-%A-%a
#SBATCH --job-name=DATA_visualisation
#SBATCH --partition=short
#SBATCH --array=0-5

# Program configuration
__author__='Fatima FARIS'
__email__='Fatima.FARIS@etu.uca.fr'
__credits__=['Fatima FARIS']
__license__='GPL3'
__maintainer__='Fatima FARIS'
__status__='Development'
__version__='0.0.1'

echo 'Data exploration with deepTools'

# Handling errors
#set -x # debug mode on
set -o errexit # ensure script will stop in case of ignored error
set -o nounset # force variable initialisation
#set -o verbose
#set -euo pipefail
module purge
module load gcc/4.8.4 python/2.7.9 numpy/1.9.2 samtools/1.3 deepTools/3.1.2

echo "Set up directories ..." >&2
#Set up the temporary directory
SCRATCHDIR=/storage/scratch/"$USER"/"$SLURM_JOB_ID"
OUTPUT="$HOME"/atacseq/results/deeptools
mkdir -p "$OUTPUT"
mkdir -p -m 700 "$SCRATCHDIR"
cd "$SCRATCHDIR"

#Set up data directory
DATA_DIR="$HOME"/atacseq/results/picard

tab="$DATA_DIR"/*/*mapped*nodup.bam

#Run the program
echo "Create count matrix" >&2
#Args -b <file> : Path to the input BAM file
#Args -o <file> : PAth to the ouput file

multiBamSummary bins \
	-b $tab \
	-o "$OUTPUT"/covmatrix.npz

echo "PCA plot based on the count matrix" >&2
#Args -in <file>: Path to the Coverage file (generated by multiBamSummary).
#Args -o <file>	: Path to the ouput file.
#Args -T <character> : Title of the plot, to be printed on top of the generated image.

plotPCA -in "$OUTPUT"/covmatrix.npz \
        -o "$OUTPUT"/PCAplot_readCounts.png \
        -T "PCA of Sequencing Depth Normalized Read Counts" 
     
echo "scatterplot with pearson correlation" >&2
#Args - in <file> : Path to the matric count file
#Args --corMethod : Correlation method, Possible choices: spearman, pearson.
#Args --whatToPlot : Possible choices: heatmap, scatterplot, Choose between a heatmap or pairwise scatter plots.
#Args -o <file> : Path to the ouput file.
#Args --outFileCorMatrix <file> : Path to Save matrix with pairwise correlation values to a tab-separated file.

plotCorrelation -in "$OUTPUT"/covmatrix.npz \
        --corMethod pearson --skipZeros \
        --plotTitle "pearson Correlation" \
        --whatToPlot scatterplot \
        -o "$OUTPUT"/scatterplot_PearsonCorr_skip_zero.png \
        --outFileCorMatrix "$OUTPUT"/scatterplot_PearsonCorr_skip_zero.tab

echo "heatmap_plot with pearson correlation" >&2
plotCorrelation -in "$OUTPUT"/covmatrix.npz \
        --corMethod pearson --skipZeros \
        --plotTitle "pearson Correlation" \
       	--whatToPlot heatmap --colorMap RdYlBu --plotNumbers \
       	-o "$OUTPUT"/heatmapplot_PearsonCorr_skip_zero.png \
        --outFileCorMatrix "$OUTPUT"/heatmapplot_PearsonCorr_skip_zero.tab

echo "heatmap_plot with spearman correlation" >&2
plotCorrelation -in "$OUTPUT"/covmatrix.npz \
                --corMethod spearman --skipZeros \
                --plotTitle "Spearman Correlation of Read Counts" \
                --whatToPlot heatmap --colorMap RdYlBu --plotNumbers \
                -o "$OUTPUT"/heatmap_SpearmanCorr_readCounts.png  \
                --outFileCorMatrix SpearmanCorr_readCounts.tab

echo "plotCoverage to assess the sequencing depth of each sample" >&2
#Args -b <file> : Path to the input BAM file.
#Args -p <number> : Number of processors to use.
#Args -o <file> : Path to th ouput file.
#Args --plotTitle : File name to save the plot to.

plotCoverage -b $tab \
    -p 6  \
    -o "$OUTPUT"/coverage.png \
    --plotTitle "example_coverage" \
    --outRawCounts coverage.tab \
    --ignoreDuplicates


#Args -b <file> : Path to the input BAM file.
#Args -hist : Save a .png file with a histogram of the fragmen.
#Args -T : Title of the plot, to be printed on top of the generated image.
#Args -p <number> : Number of processors to use.
#Args --samplesLabel : Labels for the samples plotted.
#Args --table : In addition to printing read and fragment length metrics to the screen, write them to the given file in tabular format.
bamPEFragmentSize -b $tab \
                  -hist fragmentSize.png \
                  -T "Fragment size of PE RNA-seq data" \
                  -p 6 \
                  --samplesLabel 0h_R1 0h_R2 0h_R3 24h_R1 24h_R2 24h_R3 \
                  --table "$OUTPUT"/table.tsv \
                  -o "$OUTPUT"/hist.png

echo "Stop job : "`date` >&2
